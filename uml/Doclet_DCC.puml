/home/kelkaid/Bureau/Modules_BUT_v2/BUT_S2/les_SAE/SAE_P21/Semaine_4/p21_projet@startuml
'https://plantuml.com/class-diagram

package ElementsClasse
{
    class PumlMethode{
        + <<Create>> PumlMethode(classe:Element)
        +  getTypeSimplifie(typeMirror:TypeMirror) : String
        +  obtenirNomSimple(typeMirror:TypeMirror) : String
        +  estListe(typeMirror:TypeMirror) : Boolean
        +  estReel(type:String) : Boolean
        +  premiereLettreEnMajuscule(chaine:String) : String
        +  ajouteMethodes(codePumlDeBase:StringBuilder) : StringBuilder
        +  getVisibilite(methode:ExecutableElement) : String
        +  getStatic(methode:ExecutableElement) : String
        +  getParametres(methode:ExecutableElement) : String
        +  getMethodes() : ExecutableElement[*]
    }



    class PumlPackage
    {
        + <<Create>> PumlPackage(environnement:DocletEnvironment)
        +  ajoutePackage(codePumlDeBase:StringBuilder) : StringBuilder
    }



    class PumlConstructeur{
        + <<Create>> PumlConstructeur(classe:Element)
        +  getTypeSimplifie(typeMirror:TypeMirror) : String
        +  obtenirNomSimple(typeMirror:TypeMirror) : String
        +  estListe(typeMirror:TypeMirror) : Boolean
        +  estReel(type:String) : Boolean
        +  premiereLettreEnMajuscule(chaine:String) : String
        +  ajouteConstructeurs(codePumlDeBase:StringBuilder) : StringBuilder
        +  getConstructeurs() : ExecutableElement[*]
        +  getVisibilite(methode:ExecutableElement) : String
        +  getParametres(methode:ExecutableElement) : String
    }


    class PumlTypeClasse{
        + <<Create>> PumlTypeClasse(classe:Element)
        +  ajouteTypeClasse(codePumlDeBase:StringBuilder) : StringBuilder
        +  getTypeClasse() : String
    }


    class PumlAttribut{
        + <<Create>> PumlAttribut(classe:Element)
        +  ajouteChampsDCA(codePumlDeBase:StringBuilder) : StringBuilder
        +  ajouteChampsDCC(codePumlDeBase:StringBuilder) : StringBuilder
        +  getPrimitiveFieldsNamesAndConstEnum() : String[*]
        +  getAttributs() : VariableElement[*]
        +  getVisibiliteAttribut(attribut:Element) : String
        +  getAttributStaticFinal(attribut:Element) : String>
        +  getTypeAttribut(attribut:VariableElement) : String
        +  estReel(type:String) : Boolean
        +  premiereLettreEnMajuscule(chaine:String) : String
    }

}

package Relations
{
    class PumlImplementation{
        + <<Create>> PumlImplementation(classe:Element, typeClasse:String)
        +  ajouteImplementations(codePumlDeBase:StringBuilder) : StringBuilder
        +  getInterfaces() : String[*]
    }


    class PumlRelation{
        + <<Create>> PumlRelation(classe:Element)
        +  ajouteAgregations(codePumlDeBase:StringBuilder) : StringBuilder
        +  ajouteSuperClass(codePumlDeBase:StringBuilder) : StringBuilder
        +  ajouteImplementations(codePumlDeBase:StringBuilder) : StringBuilder
    }

    class PumlSuperClass{
        + <<Create>> PumlSuperClass(classe:Element)
        +  ajouteSuperClass(codePumlDeBase:StringBuilder) : StringBuilder
        +  getSuperClassName() : String
    }


    class PumlAgregation{
        + <<Create>> PumlAgregation(classe:Element)
        +  ajouteAgregations(codePumlDeBase:StringBuilder) : StringBuilder
        +  liaisonExistante(agregationsExistantes:String[*], liaison:String) : Boolean
        +  inverseLiaison(liaison:String) : String
    }

}

package TypesDeDiagrammes
{
    class PumlDiagram
    {
    	-  dca : Boolean
        + <<Create>> PumlDiagram(repertoireDestination:String, nomFichierACree:String, environment:DocletEnvironment, dca:Boolean)
        +  generePuml()
        +  recupClasses(environment:DocletEnvironment) : Element[*]
    }


    class PumlDCC{
        + <<Create>> PumlDCC(environment:DocletEnvironment, Classes:Element[*])
        +  genereDCC() : String
        +  ecrisCodeDCC(classes:Element[*]) : String
    }


    class PumlDCA
    {
        + <<Create>> PumlDCA(environment:DocletEnvironment, Classes:Element[*])
        +  genereDCA() : String
        +  ecrisCodeDCA(classes:Element[*]) : String
    }

}

class PumlDoclet
{
    + init(Locale:locale, Reporter:reporter) {redefined Doclet::init()}
    + getName() : String {redefined Doclet::getName()}
    + getSupportedOptions() : Set<? extends Option> {redefined Doclet::getSupportedOptions()}
    + getSupportedSourceVersion() : SourceVersion {redefined Doclet::getSupportedSourceVersion()}
    + run(DocletEnvironment:environment) : Boolean {redefined Doclet::run()}
}
class ToolProvider
{
    + findFirst(name : String) : ToolProvider
}


class Java2Puml
{
    + {static} main(String[]:args)
}

class TypeMirror
{

}

interface Doclet <<interface>>
{
    + init(Locale:locale, Reporter:reporter)
    + getName() : String
    + getSupportedOptions() : Set<? extends Option>
    + getSupportedSourceVersion() : SourceVersion
    + run(DocletEnvironment:environment) : Boolean
}
interface "Doclet.Option" as docletOption <<interface>>
{
    + getArgumentCount() : int
    + getDescription() : String
    + getKind() : Option.Kind
    + getNames() : String[*]
    + getParameters() : String
    + process(option : String, arguments : String[*]) : Boolean
}

enum "Doclet.Option.Kind" as docletOptionKind <<enum>>
{
    EXTENDED
    STANDARD
    OTHER
}

interface DocletEnvironment <<interface>>
{
    + getSpecifiedElements() : Element[]
    + getIncludedElements() : Element[]
    + getDocTrees() : DocTrees
    + getElementUtils() : Elements
    + getTypeUtils() : Types
    + isIncluded(e : Element) : Boolean
    + isSelected(e : Element) : Boolean
    + getFileKind(type : TypeElement) : Kind
}
enum "DocletEnvironment.ModuleMode" as ModuleMode <<enum>>
{
    API
    ALL
}
DocletEnvironment ..> ModuleMode : <<use>>

interface Element
{
    + getEnclosedElements() : Element
    + getEnclosingElement() : Element[*]
    + getKind() : ElementKind
    + getModifiers() : Modifier[]
    + getSimpleName() : Name
    + equals(obj : Object) : Boolean {redefined Object::equals()}
    + asType() : TypeMirror
}

class Locale implements Cloneable, Serializable
interface Reporter <<interface>>
Doclet ..> Locale : <<use>>
Doclet ..> Reporter : <<use>>


Java2Puml ..> ToolProvider : <<instanciate>>

PumlDiagram ..> DocletEnvironment : <<use>>
Doclet ..> DocletEnvironment : <<use>>
docletOption <.. Doclet : <<use>>
docletOptionKind <.. docletOption : <<use>>

PumlDoclet ...|> Doclet
Java2Puml " 1\t" -- "1\ndoclet" PumlDoclet : appelle >
PumlDoclet  " 1" ...> "1\ndiagrammeUML" PumlDiagram : <<instanciate>>

PumlDiagram ..> Element : <<use>>


enum ElementKind
{
    ANNOTATION_TYPE
    CLASS
    CONSTRUCTOR
    ENUM
    ENUM_CONSTANT
    EXCEPTION_PARAMETER
    FIELD
    INSTANCE_INIT
    INTERFACE
    LOCAL_VARIABLE
    METHOD
    MODULE
    OTHER
    PACKAGE
    PARAMETER
    RESSOURCE_VARIABLE
    STATIC_INIT
    TYPE_PARAMETER
    isClass()
    isField()
    isInterface()
}

class DocTrees extends Trees
{
    + <<Create>> DocTrees()

    + getBreakIterator() : BreakIterator
    + getDocCommentTree(path : TreePath) : DocCommentTree
    + getDocCommentTree(e : Element) : DocCommentTree
    + getDocCommentTree(fileObject : FileObject) : DocCommentTree

    + getDocTreePath(fileObject : FileObject, packageElement : PackageElement) : DocTreePath
    + getElement(path : DocTreePath) : Element
    + getType(path : DocTreePath) : TypeMirror
    + getFirstSentence(list : DocTree[*]) : DocTree[*]
    + getSourcePositions() : DocSourcePositions
    + getDocTreeFactory() : DocTreeFactory
    + getCharacters(tree : EntityTree) : String
}
        PumlTypeClasse ..> Element : <<use>>
    PumlAttribut ..> Element : <<use>>
    PumlAttribut ..> VariableElement : <<use>>


    PumlConstructeur ..> Element : <<use>>
    PumlConstructeur ..> TypeMirror : <<use>>
    PumlConstructeur ..> ExecutableElement : <<use>>

PumlMethode ..> Element : <<use>>
PumlMethode ..> TypeMirror : <<use>>
PumlMethode ..> ExecutableElement : <<use>>

PumlDiagram ..> PumlDCA : <<instanciate>>
PumlDiagram ..> PumlDCC : <<instanciate>>

PumlRelation ..> PumlAgregation : <<instanciate>>
PumlRelation ..> PumlImplementation : <<instanciate>>
PumlRelation ..> PumlSuperClass : <<instanciate>>

PumlImplementation ..> Element : <<use>>
PumlRelation ..> Element : <<use>>
PumlSuperClass ..> Element : <<use>>
PumlAgregation ..> Element : <<use>>

PumlDiagram ..> DocletEnvironment : <<use>>
PumlDCC ..> Element : <<use>>
PumlDCC ..> DocletEnvironment : <<use>>
PumlDCA ..> Element : <<use>>
PumlDCA ..> DocletEnvironment : <<use>>

PumlDCA ..> PumlAttribut : <<instanciate>>
PumlDCA ..> PumlConstructeur : <<instanciate>>
PumlDCA ..> PumlMethode : <<instanciate>>
PumlDCA ..> PumlPackage : <<instanciate>>
PumlDCA ..> PumlTypeClasse : <<instanciate>>

PumlDCC ..> PumlAttribut : <<instanciate>>
PumlDCC ..> PumlConstructeur : <<instanciate>>
PumlDCC ..> PumlMethode : <<instanciate>>
PumlDCC ..> PumlPackage : <<instanciate>>
PumlDCC ..> PumlTypeClasse : <<instanciate>>



@enduml