@startuml

package [test]{
	class B{
 <<Create>> B()
-  anIntFunction(anIntParam:Integer) : Integer
~  aShortFunction(aShortParam:Short) : Short
  aLongFunction(aLongParam:Long) : Long
+  aByteFunction(aByteParam:Byte) : Byte
-  aFloatFunction(aFloatParam:Float) : Float
~  aDoubleFunction(aDoubleParam:Double) : Double
 {static} aCharacterFunction(aCharacterParam:Character) : Character
+ {static} aBooleanFunction(aBooleanParam:Boolean) : Boolean
}


class A{
	-  anInt : Integer 
	~  aShort : Integer 
	  aLong : Integer 
	+  aByte : Integer 
	-  aFloat : Integer {ReadOnly}
	~ {static} aDouble : Integer 
	 {static} aChar : Integer {ReadOnly}
	+ {static} aBoolean : Boolean {ReadOnly}
 <<Create>> A()
-  anIntFunction(anIntParam:Integer) : Integer
~  aShortFunction(aShortParam:Integer) : Integer
  aLongFunction(aLongParam:Integer) : Integer
+  aByteFunction(aByteParam:Integer) : Integer
- {static} aFloatFunction(aFloatParam:Integer) : Integer
~ {static} aDoubleFunction(aDoubleParam:Integer) : Integer
 {static} aCharFunction(aCharParam:Integer) : Integer
+ {static} aBooleanFunction(aBooleanParam:Boolean) : Boolean
}


class D{
 <<Create>> D()
-  aFunction(a0:A, a1:A[], a2:A[][], a3:A[][][]) : A
  bFunction(b0:B, b1:B>[], b2:B>[]>[], b3:B>[]>[]>[]) : B[]
~  cFunction(c0:C, c1:C[][*], c2:C[]>[][*], c3:C[]>[]>[][*]) : C[*]
+ {static} dFunction(d0:D, d1:D>, d2:D>, d3:D>, d4:D>) : D>
}


class Java2PumlTest1{
+ <<Create>> Java2PumlTest1()
}


class E{
 <<Create>> E()
-  mapOfIntFunction(a0:Integer>, a1:Integer[]>, a2:Integer[][]>, a3:Integer[][][]>) : Integer>
  mapOfDoubleArrayFunction(a0:Double[]>, a1:Double>>, a2:Double[]>>, a3:Double[]>>>) : Double[]>
~  mapOfAFunction(a0:A>, a1:A>>, a2:A>[]>, a3:A>>) : A>
+ {static} mapOfArrayOfAFunction(a0:A[]>, a1:A[]>>, a2:A[]>[]>, a3:A[]>>) : A[]>
}


class C{
 <<Create>> C()
-  anIntArrayFunction(anIntArrayParam:int[]) : int[]
~  aShortArrayFunction(aShortArrayParam:Short[]) : Short[]
  aLong3DArrayFunction(someLongs:long[][][][]) : long[][][]
+  aByte5DArrayFunction(someBytes:Byte[][][][][][]) : Byte[][][][][]
-  aFloatListFunction(aFloatListParam:Float[*]) : Float[*]
~  aListOfDoubleListFunction(someDoubles:Double>>[*]) : Double>[*]
  aCharacterSetFunction(aCharacterSetParam:Character>) : Character>
+  aSetOfBooleanListFunction(someBooleans:Boolean[][]>[]>>) : Boolean>>
}


}
@enduml
